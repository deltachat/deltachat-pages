name: Deploy Preview

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Get Pullrequest ID
      id: prepare
      run: |
        export PULLREQUEST_ID=$(echo "${{ github.ref }}" | cut -d "/" -f3)
        echo ::set-output name=prid::$PULLREQUEST_ID
        if [ $(expr length "${{ secrets.USERNAME }}") -gt "1" ]; then echo ::set-output name=uploadtoserver::true ;fi
    - name: Build the site in the jekyll/builder container
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
        jekyll/builder:latest /bin/bash -c "chmod 777 /srv/jekyll && jekyll build --future --baseurl /${{ steps.prepare.outputs.prid }}/"
        mkdir ${{ steps.prepare.outputs.prid }}
    - name: Create folder if it doesn't exist
      if: steps.prepare.outputs.uploadtoserver
      uses: horochx/deploy-via-scp@v1.0.1
      with:
        user: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        host: "delta.chat"
        port: 22
        local: ${{ steps.prepare.outputs.prid }}
        remote: "/var/www/html/staging/${{ steps.prepare.outputs.prid }}"
    - name: Upload preview
      if: steps.prepare.outputs.uploadtoserver
      uses: horochx/deploy-via-scp@v1.0.1
      with:
        user: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        host: "delta.chat"
        port: 22
        local: "_site/*"
        remote: "/var/www/html/staging/${{ steps.prepare.outputs.prid }}/"
    - name: "Post links to details"
      if: steps.prepare.outputs.uploadtoserver
      run: |
        # URLs for API connection and uploads
        export GITHUB_API_URL="https://api.github.com/repos/deltachat/deltachat-pages/statuses/${{ github.event.after }}"
        export PREVIEW_LINK="https://staging.delta.chat/${{ steps.prepare.outputs.prid }}/en/"
        # Post AppImage download link to check details
        export STATUS_DATA="{\"state\": \"success\", \
                             \"description\": \"Preview the page here:\", \
                             \"context\": \"Page Preview\", \
                             \"target_url\": \"${PREVIEW_LINK}\"}"
        curl -X POST --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --url "$GITHUB_API_URL" --header "content-type: application/json" --data "$STATUS_DATA"

